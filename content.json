[{"title":"spark介绍","date":"2017-11-19T02:50:13.000Z","path":"2017/11/19/spark介绍/","text":"spark系列spark是什么spark是一个通用计算框架，包含了一整套的计算模型，以及布式式集群的资源调度 spark的特点与hadoop相比，spark在内存中计算，速度比hadoop快的多，便于进行交互式操作 spark提供了python,java,scala,sql的API,并且spark还能运行在hadoop集群 spark的组件 spark core spark sql spark streaming MLlib GraphX spark core实现了spark core的基本功能，包含任务调度，内存管理，错误恢复，与存储系统的交互模块 spark sqlspark sql是spark用来操作数据结构化的程序包，通过spark sql，我们可以通过hive版本的sql来查询数据 spark streamingspark streaming是spark提供的对实时数据流计算的组件，比如网页服务吕在日志，或者用户提供的状态组成的消息队列，spark streaming提供了用来操作数据流的API，并且与RDD高度对应 MLlibspark包含了常见的机器学习算法，包括分类，回归，聚类，协同过滤等，还提供了模型评估，数据导入等额外的支持功能 GraphX这是用来操作图，比如社交网络的朋友关系图的程序库，可以进行并行的图计算，也扩展了rdd的API","tags":[{"name":"spark","slug":"spark","permalink":"http://blog.xiaojiezhu/tags/spark/"},{"name":"大数据","slug":"大数据","permalink":"http://blog.xiaojiezhu/tags/大数据/"}]},{"title":"浏览器鼠标滚轮事件","date":"2017-11-18T15:47:42.000Z","path":"2017/11/18/浏览器鼠标滚轮事件/","text":"监听浏览器的滚轮事件实现目标 监听鼠标滚轮事件 获取是向上滚动还是向下滚动 处理鼠标的连续滚动 笔者以谷歌浏览器亲试，谷歌内核的都可以火狐浏览器不行，ie浏览器也不行 1.实现鼠标滚轮事件window.onmousewheel = function(e)&#123; console.log(e); if(e.deltaY &gt; 0)&#123; //向下 &#125;else&#123; //向上 &#125;&#125; 2.获取是向上滚动还是向下滚动 这里面的deltaY是Y轴滚动的像素点，如果是正数，则是向下滚动，如果是负数，则是向下滚动 3.处理鼠标滚动的连续滚动事件 先说一下什么是鼠标的连续滚动，鼠标的滚轮每转动到相应的地方都会触发一个滚轮事件，但是如果滚动的用力，就可能会触发多次的滚动事件。也就是说操作一次鼠标滚动，很有可能会触发多次鼠标滚动的事件，这样如果要处理一些数据的事件，就不是我们想要的效果了 我们来处理掉这个事件，让它1秒钟只触发一次就行了 window.onmousewheel = function(e)&#123; console.log(JSON.stringify(e)); if(e.deltaY &gt; 0)&#123; //向下 if(enableRool())&#123; //做点事情 &#125; &#125;else&#123; //向上 if(enableRool())&#123; //做点事情 &#125; &#125;&#125;var roolTime = new Date().getTime();function enableRool()&#123; var now = new Date().getTime(); if(now - roolTime &gt; 1000)&#123; roolTime = now; return true; &#125; return false;&#125; 通过如上的代码可以看到，在enableRool()方法中，如果距离上次滚动时间小于1秒的话，是不会在触发滚轮事件的，所以也就不会造成一次操作，触发多次滚动的事件了","tags":[{"name":"js","slug":"js","permalink":"http://blog.xiaojiezhu/tags/js/"},{"name":"事件","slug":"事件","permalink":"http://blog.xiaojiezhu/tags/事件/"}]},{"title":"第一篇文章","date":"2017-11-13T02:26:00.000Z","path":"2017/11/13/writeblog/","text":"怎么写一篇博客呢你猜啊 是的，它就是这样子的: 直接量 变量 代码如下public void main(String[] args)&#123; System.out.println(args);&#125;","tags":[{"name":"文章标签","slug":"文章标签","permalink":"http://blog.xiaojiezhu/tags/文章标签/"}]},{"title":"Hello World","date":"2017-11-13T02:11:23.637Z","path":"2017/11/13/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","tags":[]},{"title":"spring的factorybean","date":"2017-11-12T16:00:00.000Z","path":"2017/11/13/spring-factorybean/","text":"spring的factory是什么作用呢FactoryBean 可以让用户把任意bean注入到spring中","tags":[{"name":"spring","slug":"spring","permalink":"http://blog.xiaojiezhu/tags/spring/"}]},{"title":"vue的用法","date":"2017-11-12T16:00:00.000Z","path":"2017/11/13/vue/","text":"#如何使用vue var v = new Vue(&#123; el : \"#app\", data : &#123;&#125;&#125;); &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt;&lt;/html&gt;","tags":[{"name":"vue","slug":"vue","permalink":"http://blog.xiaojiezhu/tags/vue/"}]}]